@model LibrarySystemMvc.Models.Book

<div id="form-edit">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset class="form-horizontal">
            <legend>Edit Book</legend>

            @Html.HiddenFor(model => model.Id)

            <div class="control-group">
                @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Author, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Author)
                    @Html.ValidationMessageFor(model => model.Author, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.ISBN, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.ISBN)
                    @Html.ValidationMessageFor(model => model.ISBN, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Website, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Website)
                    @Html.ValidationMessageFor(model => model.Website, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.HiddenFor(model => model.Category.Title)
                <div class="controls">
                    @(Html.Kendo().DropDownList()
                                    .Name("categoryList")
                                    .DataTextField("Title")
                                    .DataValueField("Title")
                                    .Events(ev => ev.Select("selectedValue"))
                                    .DataSource(data =>
                                    {
                                        data.Read(read =>
                                            {
                                                read.Action("GetAll", "Categories");
                                            })
                                        .ServerFiltering(true);
                                    })

                                )
                    @Html.ActionLink("Edit categories", "Index", "Categories")
                </div>
                <div>
                    
                 </div>
            </div>


            
            <div class="form-actions no-color">
                <input type="submit" value="Save" class="btn" />                
            </div>
        </fieldset>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
        <div id="category-val"></div>
    }
</div>
<script type="text/javascript">        
    function selectedValue(e) {
        $('#Category_Title').val(this.dataItem(e.item.index()).Title);
    }   
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}   
