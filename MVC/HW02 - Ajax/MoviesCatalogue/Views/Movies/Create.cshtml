@model MoviesCatalogue.Models.Movie

<div id="form-create">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset class="form-horizontal">
            <legend>Create movie</legend>

            <div class="control-group">
                @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Director, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Director)
                    @Html.ValidationMessageFor(model => model.Director, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Year, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Year)
                    @Html.ValidationMessageFor(model => model.Year, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Studio, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Studio)
                    @Html.ValidationMessageFor(model => model.Studio, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.StudioAddress, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.StudioAddress)
                    @Html.ValidationMessageFor(model => model.StudioAddress, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.LeadingMale, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.LeadingMale.Name)
                    @Html.ValidationMessageFor(model => model.LeadingMale.Name, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.LeadingFemale, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.LeadingFemale.Name)
                    @Html.ValidationMessageFor(model => model.LeadingFemale.Name, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="form-actions no-color">
                <input type="submit" value="Create" class="btn" />
                <input type="button" class="btn cancel" value="Cancel" id="cancel-create" />
            </div>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<script>    
    $("#cancel-create").click(function () {        
        $("#form-create").detach();
    });
</script>



